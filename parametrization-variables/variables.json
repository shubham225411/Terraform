{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string", // type is the only mandatory property of a parameter
            "defaultValue":"[uniqueString(resourceGroup().id)]", // to generate a unique name as each resource group has a unique id
            "minLength":3,
            "maxLength":24,
            "metadata": {
                "description": "Unique DNS name for the storage account"
            }
        },
        "stage": {
            "type": "string",
            "defaultValue": "test",
            "allowedValues": [
                "test",
                "dev",
                "stg",
                "prod"
            ]
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
            "Premium_LRS",
            "Premium_ZRS",
            "Standard_GRS",
            "Standard_GZRS",
            "Standard_LRS",
            "Standard_RAGRS",
            "Standard_RAGZRS",
            "Standard_ZRS"
            ],
            "metadata": {
                "description":" Approved SKU for this deployment"
            }
        },
        "storageLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    // so what will happen here- it will take the default value of these two parameters and concat them and we are passing this varaible
    // as the storageAccount resource's name
    "variables": {
            "storageAccountname": "[concat(parameters('storageAccountName'), parameters('stage')  )]"
    },
    "resources": [
        {
            "name": "[variables('storageAccountname')]", 
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {
                "displayName": "[uniqueString(resourceGroup().id)]"
            },
            "location": "[parameters('storageLocation')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "Premium"
            }
        }
    ]
}